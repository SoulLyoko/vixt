import type { AppOptions, Vixt } from '@vixt/core'

import { generateAppConfig, generateClient, generateCss, generatePlugins } from '@vixt/core'
import fs from 'fs-extra'
import path from 'pathe'

export function generateMainTs(options: AppOptions, vixt: Vixt) {
  const { buildDir } = vixt.options

  const mainTsPath = path.resolve('.vitepress/theme/index.ts')
  if (!fs.existsSync(mainTsPath))
    fs.outputFileSync(mainTsPath, `// Generated by Vixt\n// This file transform from '${path.basename(buildDir!)}/main.ts'\n`)

  generateClient(vixt)
  const cssTemplate = generateCss(options)
  const appConfigTemplate = generateAppConfig(vixt)
  const pluginsTemplate = generatePlugins(vixt)

  const code = `// Generated by Vixt
// This file transform to '.vitepress/theme/index.ts'
// @ts-nocheck
${cssTemplate}
${appConfigTemplate}
${pluginsTemplate}

import 'uno.css'
import { createPinia } from 'pinia'
import { createPersistedState } from 'pinia-plugin-persistedstate'
import DefaultTheme from 'vitepress/theme'

export default {
  extends: DefaultTheme,
  enhanceApp(ctx) {
    const pinia = createPinia()
    pinia.use(createPersistedState(appConfig.piniaPersistedState))
    ctx.app.use(pinia)
    usePlugins({ ...ctx, pinia, appConfig })
  },
}
`

  fs.outputFileSync(path.resolve(buildDir!, 'main.ts'), code)
  return code
}
