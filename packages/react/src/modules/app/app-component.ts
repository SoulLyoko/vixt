import type { Vixt } from '@vixt/core'

import fs from 'fs-extra'
import path from 'pathe'

export function getAppComponentPath(vixt: Vixt) {
  for (const layer of vixt._layers) {
    const appComponentPath = path.resolve(layer.config!.srcDir!, 'App.tsx')
    if (fs.existsSync(appComponentPath))
      return appComponentPath
  }
}

export function generateSetupLayouts(vixt: Vixt) {
  const { buildImportsDir } = vixt.options
  const { defaultLayout = 'default' } = vixt.options.layouts ?? {}

  // generate function setupLayouts for auto-import
  fs.outputFileSync(path.resolve(buildImportsDir!, `layouts.ts`), `// Generated by Vixt
// @ts-nocheck
import { createElement } from 'react'
import { layouts } from 'virtual:generated-layouts'

export function setupLayouts(routes) {
  return routes.map(route => {
    if (route.children?.length > 0) {
      route.children = setupLayouts(route.children)
    }
    if(route.element && route.meta?.layout !== false) {
      return {
        path: route.path,
        element: createElement(layouts[route.meta?.layout ?? '${defaultLayout}']),
        children: [{ ...route, path: '' }]
      }
    }
    return route
  });
}
`)
}

export function genarateAppComponent(vixt: Vixt) {
  generateSetupLayouts(vixt)

  const { buildDir } = vixt.options
  const defaultAppComponentPath = path.resolve(buildDir!, `App.tsx`)

  // generate App.tsx in .vixt
  fs.outputFileSync(defaultAppComponentPath, `// Generated by Vixt
// @ts-nocheck
import { StrictMode } from 'react'
import { useRoutes } from 'react-router'
import generatedRoutes from '~react-pages'

const routes = setupLayouts(generatedRoutes)

function App() {
  return (
    <StrictMode>
      {useRoutes(routes)}
    </StrictMode>
  )
}

export default App
`)

  const appComponentPath = getAppComponentPath(vixt) || defaultAppComponentPath
  const appComponentTemplate = `import App from '${appComponentPath}'`
  return appComponentTemplate
}
