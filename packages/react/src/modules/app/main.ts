import type { AppOptions, Vixt } from '@vixt/core'

import { generateAppConfig, generateClient, generateCss, generatePlugins } from '@vixt/core'
import fs from 'fs-extra'
import path from 'pathe'

import { genarateAppComponent } from './app-component'

export function generateMainFile(options: AppOptions, vixt: Vixt) {
  const { buildDir, srcDir } = vixt.options
  const mainFileName = 'main.tsx'

  const mainTsPath = path.resolve(srcDir!, mainFileName)
  if (!fs.existsSync(mainTsPath))
    fs.outputFileSync(mainTsPath, `// Generated by Vixt\n// This file transform from '${path.basename(buildDir!)}/${mainFileName}'\n`)

  generateClient(vixt)
  const appComponentTemplate = genarateAppComponent(vixt)
  const cssTemplate = generateCss(options)
  const appConfigTemplate = generateAppConfig(vixt)
  const pluginsTemplate = generatePlugins(vixt)

  const code = `// Generated by Vixt
// This file transform to '${srcDir}/${mainFileName}'
// @ts-nocheck
${appComponentTemplate}
${cssTemplate}
${appConfigTemplate}
${pluginsTemplate}

import 'virtual:uno.css'
import { StrictMode, Suspense } from 'react'
import { createRoot } from 'react-dom/client'
import { BrowserRouter } from 'react-router'
import routes from '~react-pages'

const app = createRoot(document.getElementById('${options.rootId}')!)
app.render(
  <BrowserRouter basename="${options.baseURL}">
    <App />
  </BrowserRouter>,
)

usePlugins({ app, routes, appConfig })
`

  fs.outputFileSync(path.resolve(buildDir!, mainFileName), code)
  return code
}
