import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.DINf6-p9.js";const o=JSON.parse('{"title":"Vixt","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md"}'),n={name:"guide/index.md"};function p(l,s,h,r,d,k){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="vixt" tabindex="-1">Vixt <a class="header-anchor" href="#vixt" aria-label="Permalink to &quot;Vixt&quot;">​</a></h1><p><a href="https://npmjs.com/package/vixt"><img src="https://img.shields.io/npm/v/vixt.svg" alt="npm package"></a><a href="https://soullyoko.github.io/vixt/"><img src="https://img.shields.io/badge/Vixt%20Docs-5A5A5A" alt="Website"></a></p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>Vixt是一个<a href="https://vitepress.dev/zh/" target="_blank" rel="noreferrer">Vite</a>插件，与<a href="https://nuxt.com.cn/" target="_blank" rel="noreferrer">Nuxt</a>一样旨在提升开发者体验，名字取自Vite的前两个字母和Nuxt的后两个字母。</p><h2 id="为什么不用nuxt" tabindex="-1">为什么不用Nuxt? <a class="header-anchor" href="#为什么不用nuxt" aria-label="Permalink to &quot;为什么不用Nuxt?&quot;">​</a></h2><p>Nuxt具备SSR和全栈开发的能力，如果你的项目需要这些，Nuxt是个不错的选择。当然它也可以通过配置关闭ssr甚至是混合渲染以适应不同的场景，但是它依然会带来一些额外的性能开销和心智负担，随着项目体积增大，启动时间也会成倍增加（这也是Vixt诞生的主要原因）。</p><p>而Vixt则是一个轻量级的Vite插件，抛弃了ssr(也许后续会支持)和服务端，它的启动速度完全取决于Vite，Vite有多快，Vixt就有多快，同时它也提供了一些提升开发者体验的特性，比如文件系统路由、布局、自动导入、插件(plugins)、模块(modules)、图层(layers)等。</p><h2 id="创建vixt项目" tabindex="-1">创建Vixt项目 <a class="header-anchor" href="#创建vixt项目" aria-label="Permalink to &quot;创建Vixt项目&quot;">​</a></h2><p>Vixt推荐使用pnpm+monorepo管理项目，创建的默认模板也是monorepo项目</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认为monorepo模板，包含vue和uni-app项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vixt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-project</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># vue单项目</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># pnpm create vixt my-project --template vue-ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># uni-app单项目</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># pnpm create vixt my-project --template uni-ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># react单项目</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># pnpm create vixt my-project --template react-ts</span></span></code></pre></div><h2 id="在现有项目中使用" tabindex="-1">在现有项目中使用 <a class="header-anchor" href="#在现有项目中使用" aria-label="Permalink to &quot;在现有项目中使用&quot;">​</a></h2><ul><li>删除 packages.json 中的与vixt重复的依赖(如vue,vite等,非必须)</li><li>创建 .npmrc</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>shamefully-hoist=true</span></span>
<span class="line"><span>strict-peer-dependencies=false</span></span></code></pre></div><ul><li>安装 vixt</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vixt</span></span></code></pre></div><ul><li>新建vixt.config.ts</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineVixtConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@vixt/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineVixtConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({})</span></span></code></pre></div><ul><li>修改vite.config.ts</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vixt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@vixt/vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vixt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><ul><li>修改tsconfig.json</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./.vixt/tsconfig.json&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="packages" tabindex="-1">Packages <a class="header-anchor" href="#packages" aria-label="Permalink to &quot;Packages&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Package</th><th>Desc</th></tr></thead><tbody><tr><td><a href="./packages/vixt.html">vixt</a></td><td>统一管理vixt的所有包</td></tr><tr><td><a href="./packages/core.html">@vixt/core</a></td><td>vixt的底层核心</td></tr><tr><td><a href="./packages/vue.html">@vixt/vue</a></td><td>vue的适配层</td></tr><tr><td><a href="./packages/uni.html">@vixt/uni</a></td><td>uni-app的适配层</td></tr><tr><td><a href="./packages/vitepress.html">@vixt/vitepress</a></td><td>vitepress的适配层</td></tr><tr><td><a href="./packages/react.html">@vixt/react</a></td><td>react的适配层</td></tr><tr><td><a href="./packages/create-vixt.html">create-vixt</a></td><td>用于创建模板项目</td></tr></tbody></table>`,23)]))}const g=i(n,[["render",p]]);export{o as __pageData,g as default};
